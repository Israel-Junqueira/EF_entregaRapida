@using Microsoft.AspNetCore.Identity
@model EntregaRapida.Models.Pedido 
@inject UserManager<IdentityUser> UserManager;

 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAuo0h6pD5eu2dNlckQhGnWl3nCzzPYl2o &libraries=places"></script>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18"></script>

<body>
    <form id="pedidoForm" method="post" asp-controller="PedidoCadastro" asp-action="CadastrarPedido">
    @{
        var userEndereço = ViewData["UsuarioEndereco"];
        var userId = ViewData["LojistaId"];
        var userNome = ViewData["LojistaNome"];
    }
    <div class="form-group"id="dataInput" style="padding:10px;" >
        <input asp-for="date" class="form-control"style="border-radius:10px" type="datetime-local" />
        <span asp-validation-for="date" class="text-danger "></span>
    </div>
    <div class="form-group" style="padding:10px;">
        <input asp-for="enderecoDestino" class="form-control"style="border-radius:10px" id="enderecoDestinoInput" placeholder="Endereço do Cliente" />
        <span asp-validation-for="enderecoDestino" class="text-danger"></span>
    </div>
    <div class="form-group"style="padding:10px;">
        <input asp-for="numeroImovel" class="form-control" style="border-radius:10px" placeholder="Numero" type="number" />
        <span asp-validation-for="numeroImovel" class="text-danger"></span>
    </div>
    <div class="form-group" style="padding:10px;">
        <input asp-for="descricao" class="form-control" style="border-radius:10px" value="Pizza de Peperoni" placeholder="Anotações"/>
        <span asp-validation-for="descricao" class="text-danger"></span>
    </div>
    <div class="form-group" hidden>
        <label asp-for="enderecoOrigem" class="control-label"></label>
        <input asp-for="enderecoOrigem" class="form-control" value="@userEndereço" id="enderecoOrigemInput" hidden readonly/>
        <span asp-validation-for="enderecoOrigem" class="text-danger" hidden></span>
    </div>
    <div class="form-group" hidden>
        <label asp-for="statuspedido" class="control-label"></label>
        <input asp-for="statuspedido" class="form-control" value="Pendente" />
        <span asp-validation-for="statuspedido" class="text-danger"></span>
    </div>
    <div class="form-group" hidden>
        <label asp-for="Cidade" class="control-label"></label>
        <input asp-for="Cidade" class="form-control" value="Barra Bonita" />
        <span asp-validation-for="Cidade" class="text-danger"></span>
    </div>
    <div class="form-group" hidden>
        <label asp-for="LojistaId" class="control-label"></label>
        <input asp-for="LojistaId" class="form-control" value="@userId" id="LojistaIdInput" readonly />
        <span asp-validation-for="LojistaId" class="text-danger"></span>
    </div>
    <div class="form-group" hidden>
        <label asp-for="LojistaNome" class="control-label mb-1"></label>
        <input asp-for="LojistaNome" class="form-control" value="@userNome" id="LojistaNomeInput" readonly/>
        <span asp-validation-for="LojistaNome" class="text-danger"></span>
    </div>
    <input type="hidden" asp-for="enderecoCompleto" />
    <div class="form-group"style="padding:10px;" >
        <input type="submit" value="Cadastrar" class="btn btn-primary "style="border-radius:10px;" />
    </div>
</form>

<script>
    function validarData(event) {
    const dataInput = document.getElementById('dataInput');
    const dataValue = dataInput.value;

    // Verifique se a data está no formato esperado (DD-MM-YYYY-HH:MM)

  }

  document.getElementById('pedidoForm').addEventListener('submit', validarData);


  function validarEndereco(event) {
    event.preventDefault();

    const enderecoDestinoInput = document.getElementById('enderecoDestinoInput');
    const numeroImovelInput = document.getElementById('numeroImovel');
    const dataInput = document.getElementById('date');

    const enderecoPattern = /^(.*),\s*(.*)$/;

    if (!enderecoPattern.test(enderecoDestinoInput.value)) {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Endereço no formato correto (Rua, Cidade), não esqueça a vírgula!',
        footer: '<a href="">Você Precisa de ajuda?</a>'
      });
      return;
    }

    if (dataInput.value === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Por favor, preencha o campo de data!',
        footer: '<a href="">Você Precisa de ajuda?</a>'
      });
      return;
    }

    if (numeroImovelInput.value === '') {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Por favor, preencha o campo de número do imóvel!',
        footer: '<a href="">Você Precisa de ajuda?</a>'
      });
      return;
    }

    const enderecoCompleto = enderecoDestinoInput.value + ', ' + numeroImovelInput.value;

    document.getElementById('enderecoCompleto').value = enderecoCompleto;

    event.target.submit();
  }

  function initAutocomplete() {
    const input = document.getElementById('enderecoDestinoInput');
    const options = {
      types: ['address'],
      componentRestrictions: { country: 'BR' },
      strictBounds: true
    };
    const autocomplete = new google.maps.places.Autocomplete(input, options);

    autocomplete.addListener('place_changed', function() {
      const place = autocomplete.getPlace();

      input.value = '';

      if (place.address_components.length >= 4) {
        const endereco = place.address_components[0].short_name;
        const cidade = place.address_components[place.address_components.length - 4].short_name;

        input.value = endereco + ', ' + cidade;
      }
    });
  }

  document.getElementById('pedidoForm').addEventListener('submit', validarEndereco);
  document.addEventListener('DOMContentLoaded', initAutocomplete);
</script>

</body>

