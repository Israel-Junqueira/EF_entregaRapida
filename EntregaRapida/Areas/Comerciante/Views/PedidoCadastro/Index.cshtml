@using Microsoft.AspNetCore.Identity
@model EntregaRapida.Models.Pedido 
@inject UserManager<IdentityUser> UserManager;

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAuo0h6pD5eu2dNlckQhGnWl3nCzzPYl2o&libraries=places"></script>
</head>
<body>
    <form id="pedidoForm" method="post" asp-controller="PedidoCadastro" asp-action="CadastrarPedido">
    @{
        var userEndereço =  ViewData["UsuarioEndereco"];
        var userId =  ViewData["LojistaId"];
        var userNome = ViewData["LojistaNome"];
    }
    <div class="form-group">
        <label asp-for="date" class="control-label"></label>
        <input asp-for="date" class="form-control" />
        <span asp-validation-for="date" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="enderecoDestino" class="control-label"></label>
        <input asp-for="enderecoDestino" class="form-control" id="enderecoDestinoInput" placeholder="Rua Ludovico Victório,Barra Bonita" />
        <span asp-validation-for="enderecoDestino" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="numeroImovel" class="control-label"></label>
        <input asp-for="numeroImovel" class="form-control" placeholder= "2140" />
        <span asp-validation-for="numeroImovel" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="descricao" class="control-label"></label>
        <input asp-for="descricao" class="form-control" value="Pizza de Peperoni" />
        <span asp-validation-for="descricao" class="text-danger"></span>
    </div>
     <div class="form-group">
        <label asp-for="enderecoOrigem" class="control-label"></label>
        <input asp-for="enderecoOrigem" class="form-control" value="@userEndereço" readonly />
        <span asp-validation-for="enderecoOrigem" class="text-danger"></span>
    </div>
     <div class="form-group" hidden>
        <label asp-for="statuspedido" class="control-label"></label>
        <input asp-for="statuspedido" class="form-control" value="Pendente" readonly />
        <span asp-validation-for="statuspedido" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Cidade" class="control-label" hidden></label>
        <input asp-for="Cidade" class="form-control" value="Barra Bonita" hidden />
        <span asp-validation-for="Cidade" class="text-danger" hidden></span>
    </div>
    <div class="form-group">
        <label asp-for="LojistaId" class="control-label" hidden></label>
        <input asp-for="LojistaId" class="form-control" value="@userId" readonly hidden />
        <span asp-validation-for="LojistaId" class="text-danger" hidden></span>
    </div>
    <div class="form-group mb-2">
        <label asp-for="LojistaNome" class="control-label" hidden></label>
        <input asp-for="LojistaNome" class="form-control" value="@userNome" readonly hidden />
        <span asp-validation-for="LojistaNome" class="text-danger" hidden></span>
    </div>
    <input type="hidden" asp-for="enderecoCompleto" />
     <div class="form-group ">
        <input type="submit" value="Cadastrar" class="btn btn-primary" />
    </div>
</form>
<script>
  // Validação do endereço
        function validarEndereco(event) {
            event.preventDefault(); // Impede o envio do formulário por padrão

            const enderecoDestinoInput = document.getElementById('enderecoDestinoInput');
            const numeroImovelInput = document.getElementById('numeroImovel');

            const enderecoPattern = /^(.*),\s*(.*)$/; // Expressão regular para validar o formato do endereço

            if (!enderecoPattern.test(enderecoDestinoInput.value)) {
                alert('Por favor, insira o endereço no formato correto (Rua, Cidade), não esqueça a vírgula.');
                return; // Impede a continuação do código
            }

            // Juntar o endereço e o número
            const enderecoCompleto = enderecoDestinoInput.value + ', ' + numeroImovelInput.value;

            // Atualizar o campo oculto com o endereço completo
            document.getElementById('enderecoCompleto').value = enderecoCompleto;

            // Se a validação for bem-sucedida, você pode prosseguir com o envio do formulário
            event.target.submit();
        }

    // Inicializa o widget de preenchimento automático
    function initAutocomplete() {
        const input = document.getElementById('enderecoDestinoInput');
        const options = {
            types: ['address'], // Limita o autocomplete a endereços
            componentRestrictions: { country: 'BR' }, // Restringe ao Brasil
            strictBounds: true
        };
        const autocomplete = new google.maps.places.Autocomplete(input, options);

        // Manipula o evento place_changed do autocomplete
        autocomplete.addListener('place_changed', function() {
            const place = autocomplete.getPlace();

            // Limpa o campo de endereço
            input.value = '';

            // Verifica se o local selecionado possui os componentes de endereço esperados
            if (place.address_components.length >= 4) {
                const endereco = place.address_components[0].short_name;
                const cidade = place.address_components[place.address_components.length - 4].short_name;

                // Atualiza o valor do input com as informações extraídas
                input.value = endereco + ', ' + cidade;
            }
        });
    }

    // Evento disparado ao enviar o formulário
    document.getElementById('pedidoForm').addEventListener('submit', validarEndereco);

    // Chama a função initAutocomplete quando o documento é carregado
    document.addEventListener('DOMContentLoaded', initAutocomplete);
</script>


</body>
</html>
